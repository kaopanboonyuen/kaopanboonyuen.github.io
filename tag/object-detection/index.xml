<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>object-detection | Teerapong Panboonyuen</title>
    <link>https://kaopanboonyuen.github.io/tag/object-detection/</link>
      <atom:link href="https://kaopanboonyuen.github.io/tag/object-detection/index.xml" rel="self" type="application/rss+xml" />
    <description>object-detection</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>©2024 Kao Panboonyuen</copyright><lastBuildDate>Sun, 08 Sep 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://kaopanboonyuen.github.io/media/icon_hueaa9297dc78a770d45cebdfb81bbca28_1203332_512x512_fill_lanczos_center_3.png</url>
      <title>object-detection</title>
      <link>https://kaopanboonyuen.github.io/tag/object-detection/</link>
    </image>
    
    <item>
      <title>How to Fine-Tune and Deploy a Satellite-Specific LLM Model for Satellite Images</title>
      <link>https://kaopanboonyuen.github.io/blog/2024-09-09-how-to-fine-tune-and-deploy-a-satellite-specific-llm-model/</link>
      <pubDate>Sun, 08 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://kaopanboonyuen.github.io/blog/2024-09-09-how-to-fine-tune-and-deploy-a-satellite-specific-llm-model/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    You can view the presentation slides for the talk 🌎 &lt;a href=&#34;https://kaopanboonyuen.github.io/files/slides/20240906_Panboonyuen_AI_ThaiHighway.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table of Contents&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction-to-large-language-models-llms&#34;&gt;Introduction to Large Language Models (LLMs)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#key-vocabulary&#34;&gt;Key Vocabulary&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#architecture-of-llms&#34;&gt;Architecture of LLMs&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#transformer-architecture-formula&#34;&gt;Transformer Architecture Formula&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#training-llms&#34;&gt;Training LLMs&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction-to-llms-for-satellite-images&#34;&gt;Introduction to LLMs for Satellite Images&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#overview-of-the-fine-tuning-process&#34;&gt;Overview of the Fine-Tuning Process&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#step-by-step-fine-tuning-of-satgpt-for-satellite-imagery&#34;&gt;Step-by-Step Fine-Tuning of SatGPT for Satellite Imagery&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#1-data-preparation&#34;&gt;1. Data Preparation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#2-model-selection&#34;&gt;2. Model Selection&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#3-fine-tuning-paradigm&#34;&gt;3. Fine-Tuning Paradigm&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#4-model-validation-and-evaluation&#34;&gt;4. Model Validation and Evaluation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#5-export-and-deployment-to-hugging-face&#34;&gt;5. Export and Deployment to Hugging Face&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#additional-concepts&#34;&gt;Additional Concepts&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#formula-for-self-attention-in-rag&#34;&gt;Formula for Self-Attention in RAG&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#vision-transformer-vit&#34;&gt;Vision Transformer (ViT)&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#full-flow-diagram&#34;&gt;Full Flow Diagram&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#citation&#34;&gt;Citation&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;introduction-to-large-language-models-llms&#34;&gt;Introduction to Large Language Models (LLMs)&lt;/h2&gt;
&lt;p&gt;Large Language Models (LLMs) are revolutionizing the field of Natural Language Processing (NLP) and Artificial Intelligence (AI). They leverage advanced deep learning architectures to understand, generate, and manipulate human language. In this blog post, we&amp;rsquo;ll explore the technical depths of LLMs, including their architecture, training, fine-tuning, and deployment.&lt;/p&gt;
&lt;h2 id=&#34;key-vocabulary&#34;&gt;Key Vocabulary&lt;/h2&gt;
&lt;p&gt;Here are some essential terms and acronyms related to LLMs:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Acronym&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Meaning&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;AI&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Artificial Intelligence: The simulation of human intelligence in machines that are programmed to think and learn.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ANN&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Artificial Neural Network: A computational model inspired by biological neural networks.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;BERT&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Bidirectional Encoder Representations from Transformers: A model for natural language understanding tasks.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CNN&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Convolutional Neural Network: Effective for processing grid-like data such as images.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CRF&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Conditional Random Field: A statistical modeling method for structured prediction.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;DNN&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Deep Neural Network: A neural network with multiple layers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;DL&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Deep Learning: A subset of machine learning with neural networks containing many layers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GPT&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Generative Pre-trained Transformer: A transformer-based model for generating human-like text.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;HMM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Hidden Markov Model: A model for systems that transition between states with certain probabilities.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LSTM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Long Short-Term Memory: A type of RNN designed to remember long-term dependencies.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LLM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Large Language Model: Trained on vast amounts of text data to understand and generate text.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ML&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Machine Learning: Training algorithms to make predictions based on data.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NLP&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Natural Language Processing: The interaction between computers and human language.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;RAG&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Retrieval-Augmented Generation: Combines document retrieval with generative models.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;RNN&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Recurrent Neural Network: Designed for sequential data.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;T5&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Text-to-Text Transfer Transformer: Converts various tasks into a text-to-text format.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Transformer&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;A model architecture that uses self-attention mechanisms.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ViT&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Vision Transformer: A transformer model for image processing.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;VQA&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Visual Question Answering: Combining vision and language understanding.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;VLMs&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Vision-Language Models: Close the divide between visual and language comprehension in AI.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;XLNet&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;An extension of BERT with permutation-based training.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Hugging Face&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Platform for NLP with pre-trained models, datasets, and tools.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Transformers&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Library for transformer-based models by Hugging Face.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;datasets&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Library for managing datasets, by Hugging Face.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Gradio&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Library for creating machine learning demos with simple UIs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LangChain&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Facilitates development using LLMs with tools for managing language-based tasks.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;spaCy&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Advanced NLP library in Python.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;NLTK&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Natural Language Toolkit: Tools for text processing and linguistic analysis.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;StanfordNLP&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Library by Stanford University for NLP tasks.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;OpenCV&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Library for computer vision tasks.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;PyTorch&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Deep learning framework with tensor computations and automatic differentiation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;TensorFlow&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Framework for building and deploying machine learning models.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Keras&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;High-level neural networks API running on top of TensorFlow.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Fastai&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Simplifies neural network training with PyTorch.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ONNX&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Open Neural Network Exchange format for model transfer between frameworks.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;architecture-of-llms&#34;&gt;Architecture of LLMs&lt;/h2&gt;
&lt;p&gt;LLMs are built on advanced architectures that often include transformer models. A transformer model utilizes self-attention mechanisms to process input sequences. The core components of a transformer are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Encoder&lt;/strong&gt;: Processes the input data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Decoder&lt;/strong&gt;: Generates the output sequence.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;transformer-architecture-formula&#34;&gt;Transformer Architecture Formula&lt;/h3&gt;
&lt;p&gt;The key mathematical operation in transformers is the self-attention mechanism, which can be described as follows:&lt;/p&gt;
&lt;p&gt;$[ \text{Attention}(Q, K, V) = \text{softmax}\left(\frac{QK^T}{\sqrt{d_k}}\right)V ]$&lt;/p&gt;
&lt;p&gt;where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$( Q )$ is the query matrix,&lt;/li&gt;
&lt;li&gt;$( K )$ is the key matrix,&lt;/li&gt;
&lt;li&gt;$( V )$ is the value matrix,&lt;/li&gt;
&lt;li&gt;$( d_k )$ is the dimensionality of the keys.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;training-llms&#34;&gt;Training LLMs&lt;/h2&gt;
&lt;p&gt;Training LLMs involves several steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Data Preparation&lt;/strong&gt;: Collect and preprocess large text corpora.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model Initialization&lt;/strong&gt;: Start with a pre-trained model or initialize from scratch.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Training&lt;/strong&gt;: Use gradient descent and backpropagation to minimize the loss function.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;introduction-to-llms-for-satellite-images&#34;&gt;Introduction to LLMs for Satellite Images&lt;/h2&gt;
&lt;p&gt;Fine-tuning a Large Language Model (LLM) like SatGPT for satellite imagery involves several critical stages. This process transforms a pre-trained model into a specialized tool capable of analyzing and generating insights from satellite images. This blog post provides a step-by-step guide to fine-tuning and deploying SatGPT, covering each phase in detail.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 1: Scenarios and Performance Metrics from Zhang &amp;amp; Wang&amp;rsquo;s Study&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In their paper &lt;em&gt;“Good at Captioning, Bad at Counting: Benchmarking GPT-4V on Earth Observation Data”&lt;/em&gt; (&lt;a href=&#34;https://arxiv.org/abs/2401.17600&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;arXiv:2401.17600&lt;/a&gt;), Zhang and Wang (2024) present a detailed analysis of how GPT-4V performs across various tasks. Figure 1 highlights key scenarios and the model’s performance:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Location Recognition&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Scenario:&lt;/strong&gt; Guess the name of the landmark based on features like its dome and layout.&lt;br&gt;
&lt;strong&gt;Example Answer:&lt;/strong&gt; With its distinctive style and layout, the landmark is identified as the Nebraska State Capitol.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Image Captioning&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Scenario:&lt;/strong&gt; Provide a one-sentence caption for the given image.&lt;br&gt;
&lt;strong&gt;Example Caption:&lt;/strong&gt; An aerial view of an airport terminal, featuring nearby aircraft, taxiways, and parking areas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Land Use &amp;amp; Land Cover Classification&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Scenario:&lt;/strong&gt; Classify the image into one of several categories.&lt;br&gt;
&lt;strong&gt;Example Classification:&lt;/strong&gt; The best description for the image is a Shipping Yard.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Object Localization&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Scenario:&lt;/strong&gt; Identify the coordinates of the described object in the image.&lt;br&gt;
&lt;strong&gt;Example Description:&lt;/strong&gt; The gray windmill in the center.&lt;br&gt;
&lt;strong&gt;Coordinates:&lt;/strong&gt; [233, 383, 376, 542]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Object Counting&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Scenario:&lt;/strong&gt; Estimate the number of trees visible in the image.&lt;br&gt;
&lt;strong&gt;Count:&lt;/strong&gt; 134&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Change Detection&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Scenario:&lt;/strong&gt; Count buildings in various damage categories and present in JSON format.&lt;br&gt;
&lt;strong&gt;JSON Format:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;count_before&amp;quot;: 75,
  &amp;quot;no_damage&amp;quot;: 2,
  &amp;quot;minor_damage&amp;quot;: 73,
  &amp;quot;major_damage&amp;quot;: 0,
  &amp;quot;destroyed&amp;quot;: 1
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Performance Metrics:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RefCLIP Score:&lt;/strong&gt; Shows how well the model performs on reference-based tasks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F1 Score:&lt;/strong&gt; Reflects the model’s accuracy in classification tasks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mean IoU:&lt;/strong&gt; Measures the model’s performance in object localization.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;R2 Score:&lt;/strong&gt; Assesses the model’s predictive accuracy in various tasks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These results provide valuable insights into GPT-4V’s strengths and limitations, particularly in the realm of earth observation data.&lt;/p&gt;
&lt;div style=&#34;text-align: center;&#34;&gt; &lt;img src=&#34;sample_apps.png&#34; alt=&#34;Earth observation data&#34;&gt; &lt;p style=&#34;font-style: italic; margin-top: 0px;&#34;&gt;Fig. 1. Here are examples of inputs and outputs from various benchmark tasks and how five different VLMs stack up. We’ve included just a snippet of the user prompts and model responses to highlight the key points. &lt;a href=&#34;https://arxiv.org/pdf/2401.17600v1&#34; target=&#34;_blank&#34;&gt;[Good at captioning, bad at counting]&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;
&lt;h2 id=&#34;overview-of-the-fine-tuning-process&#34;&gt;Overview of the Fine-Tuning Process&lt;/h2&gt;
&lt;p&gt;The process of fine-tuning and deploying a satellite-specific LLM model involves the following stages:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Data Preparation&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model Selection&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fine-Tuning Paradigm&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model Validation and Evaluation&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Export and Deployment to Hugging Face&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;step-by-step-fine-tuning-of-satgpt-for-satellite-imagery&#34;&gt;Step-by-Step Fine-Tuning of SatGPT for Satellite Imagery&lt;/h2&gt;
&lt;h3 id=&#34;1-data-preparation&#34;&gt;1. Data Preparation&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Objective&lt;/strong&gt;: Collect, preprocess, and format satellite images and associated textual annotations.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Collect Satellite Images&lt;/strong&gt;: Obtain satellite images from sources such as commercial providers or public datasets (e.g., Sentinel, Landsat).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Annotate Images&lt;/strong&gt;: Label images with relevant information (e.g., land cover types, objects of interest).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Preprocess Images&lt;/strong&gt;: Resize and normalize images to match the input requirements of the Vision Transformer (ViT) model.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Prepare Textual Descriptions&lt;/strong&gt;: Generate textual descriptions or annotations for each image, which will be used for training the text generation component.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import ViTFeatureExtractor, GPT2Tokenizer

# Initialize feature extractor and tokenizer
feature_extractor = ViTFeatureExtractor.from_pretrained(&#39;google/vit-base-patch16-224-in21k&#39;)
tokenizer = GPT2Tokenizer.from_pretrained(&#39;gpt2&#39;)

# Sample image and text
image = ... # Load satellite image
text = &amp;quot;This is a description of the satellite image.&amp;quot;

# Prepare inputs
inputs = feature_extractor(images=image, return_tensors=&amp;quot;pt&amp;quot;)
labels = tokenizer(text, return_tensors=&amp;quot;pt&amp;quot;).input_ids
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-model-selection&#34;&gt;2. Model Selection&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Objective&lt;/strong&gt;: Choose an appropriate pre-trained model as the foundation for SatGPT.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Vision Transformer (ViT)&lt;/strong&gt;: For processing and extracting features from satellite images.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GPT-2 or GPT-3&lt;/strong&gt;: For generating textual descriptions or insights based on image features.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import GPT2LMHeadModel, ViTModel

# Load pre-trained models
image_model = ViTModel.from_pretrained(&#39;google/vit-base-patch16-224-in21k&#39;)
text_model = GPT2LMHeadModel.from_pretrained(&#39;gpt2&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-fine-tuning-paradigm&#34;&gt;3. Fine-Tuning Paradigm&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Objective&lt;/strong&gt;: Adapt the selected models to work together for the specific task of analyzing satellite imagery.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Combine Models&lt;/strong&gt;: Integrate ViT for image feature extraction and GPT for text generation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Define Loss Functions&lt;/strong&gt;: Use suitable loss functions for image and text components.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Training Loop&lt;/strong&gt;: Implement a training loop to update model parameters based on the image-text pairs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import Trainer, TrainingArguments

# Define training arguments
training_args = TrainingArguments(
    output_dir=&#39;./results&#39;,
    num_train_epochs=3,
    per_device_train_batch_size=4,
    logging_dir=&#39;./logs&#39;,
)

# Initialize Trainer
trainer = Trainer(
    model=image_model,  # This would be a combined model in practice
    args=training_args,
    train_dataset=train_dataset,  # Prepare your dataset
)

# Train the model
trainer.train()
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;4-model-validation-and-evaluation&#34;&gt;4. Model Validation and Evaluation&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Objective&lt;/strong&gt;: Assess the performance of the fine-tuned model to ensure it meets the desired criteria.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Validation Set&lt;/strong&gt;: Use a separate dataset to validate the model’s performance during training.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Evaluation Metrics&lt;/strong&gt;: Measure performance using metrics such as accuracy, F1 score, or BLEU score (for text generation).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Evaluate the model
eval_results = trainer.evaluate()
print(eval_results)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;5-export-and-deployment-to-hugging-face&#34;&gt;5. Export and Deployment to Hugging Face&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Objective&lt;/strong&gt;: Make the fine-tuned model available for inference and integration through Hugging Face.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Export the Model&lt;/strong&gt;: Save the fine-tuned model and tokenizer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Upload to Hugging Face&lt;/strong&gt;: Use the &lt;code&gt;transformers&lt;/code&gt; library to push the model to the Hugging Face Hub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create an Inference Endpoint&lt;/strong&gt;: Deploy the model and set up an API endpoint for user interactions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from transformers import pipeline

# Load model from Hugging Face Hub
nlp = pipeline(&amp;quot;text-generation&amp;quot;, model=&amp;quot;username/satgpt-model&amp;quot;)

# Use the model
result = nlp(&amp;quot;Describe the land cover of this satellite image.&amp;quot;)
print(result)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;additional-concepts&#34;&gt;Additional Concepts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Retrieval-Augmented Generation (RAG)&lt;/strong&gt;: Combines document retrieval with generative models to improve response accuracy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vision Transformers (ViT)&lt;/strong&gt;: Adapt transformers for image processing by treating images as sequences of patches.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;formula-for-self-attention-in-rag&#34;&gt;Formula for Self-Attention in RAG&lt;/h3&gt;
&lt;p&gt;In RAG, the attention mechanism can be described as:&lt;/p&gt;
&lt;p&gt;$[ \text{RAG}(Q, K, V, D) = \text{Attention}(Q, K, V) + \text{Retrieval}(D) ]$&lt;/p&gt;
&lt;p&gt;where $( D )$ represents retrieved documents.&lt;/p&gt;
&lt;h3 id=&#34;vision-transformer-vit&#34;&gt;Vision Transformer (ViT)&lt;/h3&gt;
&lt;p&gt;The Vision Transformer treats images as sequences of patches and processes them with transformer architectures. The key operation in ViT involves:&lt;/p&gt;
&lt;p&gt;$[ \text{Patch Embedding}(I) = \text{Linear}(I) + \text{Positional Encoding} ]$&lt;/p&gt;
&lt;p&gt;where $( I )$ is the image and the output is a sequence of patch embeddings.&lt;/p&gt;
&lt;h2 id=&#34;full-flow-diagram&#34;&gt;Full Flow Diagram&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s a conceptual flow of how data is processed through SatGPT, from input to output:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Input&lt;/strong&gt;: Satellite Image + Textual Description&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Image Processing&lt;/strong&gt;: ViT processes image into feature vectors.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Text Generation&lt;/strong&gt;: GPT-2 generates textual descriptions from image features.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Output&lt;/strong&gt;: Generated Text&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Fine-tuning and deploying a satellite-specific LLM like SatGPT involves several critical stages: data preparation, model selection, fine-tuning, validation, and deployment. By following these steps, you can create a powerful tool for analyzing satellite imagery and generating valuable insights.&lt;/p&gt;
&lt;h2 id=&#34;citation&#34;&gt;Citation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Panboonyuen, Teerapong. (Sep 2024). &lt;em&gt;How to Fine-Tune and Deploy a Satellite-Specific LLM Model for Satellite Images&lt;/em&gt;. Blog post on Kao Panboonyuen. &lt;a href=&#34;https://kaopanboonyuen.github.io/blog/2024-09-09-how-to-fine-tune-and-deploy-a-satellite-specific-llm-model/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://kaopanboonyuen.github.io/blog/2024-09-09-how-to-fine-tune-and-deploy-a-satellite-specific-llm-model/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;For a BibTeX citation:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;@article{panboonyuen2024finetune,
  title   = &amp;quot;How to Fine-Tune and Deploy a Satellite-Specific LLM Model for Satellite Images&amp;quot;,
  author  = &amp;quot;Panboonyuen, Teerapong&amp;quot;,
  journal = &amp;quot;kaopanboonyuen.github.io/&amp;quot;,
  year    = &amp;quot;2024&amp;quot;,
  month   = &amp;quot;Sep&amp;quot;,
  url     = &amp;quot;https://kaopanboonyuen.github.io/blog/2024-09-09-how-to-fine-tune-and-deploy-a-satellite-specific-llm-model/&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Did you find this page helpful? Consider sharing it 🙌
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Vaswani, A., Shazeer, N., Parmar, N., Uszkoreit, J., Jones, L., Kaiser, Ł., Polosukhin, I. (NeurIPS 2017).&lt;/strong&gt; &amp;ldquo;Attention Is All You Need.&amp;rdquo; &lt;em&gt;Neural Information Processing Systems (NeurIPS)&lt;/em&gt;, 5998-6008. &lt;a href=&#34;https://doi.org/10.5555/3295222.3295349&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.5555/3295222.3295349&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Brown, T., Mann, B., Ryder, N., Subbiah, M., Kaplan, J., Dhariwal, P., Shinn, E., Ramesh, A., Muthukrishnan, P., and others. (NeurIPS 2020).&lt;/strong&gt; &amp;ldquo;Language Models are Few-Shot Learners.&amp;rdquo; &lt;em&gt;Neural Information Processing Systems (NeurIPS)&lt;/em&gt;, 1877-1901. &lt;a href=&#34;https://doi.org/10.5555/3454337.3454731&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.5555/3454337.3454731&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Devlin, J., Chang, M. W., Lee, K., &amp;amp; Toutanova, K. (NAACL 2019).&lt;/strong&gt; &amp;ldquo;BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding.&amp;rdquo; &lt;em&gt;North American Chapter of the Association for Computational Linguistics (NAACL)&lt;/em&gt;, 4171-4186. &lt;a href=&#34;https://doi.org/10.5555/3331189.3331190&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.5555/3331189.3331190&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dosovitskiy, A., Beyer, L., Kolesnikov, A., Weissenborn, D., Zhai, X., &amp;amp; others. (ICLR 2021).&lt;/strong&gt; &amp;ldquo;An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale.&amp;rdquo; &lt;em&gt;International Conference on Learning Representations (ICLR)&lt;/em&gt;. &lt;a href=&#34;https://doi.org/10.5555/3453424.3453670&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.5555/3453424.3453670&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Radford, A., Wu, J., Child, R., Mehri, S., &amp;amp; others. (ICLR 2019).&lt;/strong&gt; &amp;ldquo;Language Models are Unsupervised Multitask Learners.&amp;rdquo; &lt;em&gt;International Conference on Learning Representations (ICLR)&lt;/em&gt;. &lt;a href=&#34;https://doi.org/10.5555/3326452.3326458&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.5555/3326452.3326458&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Clark, K., Luong, M. T., Le, Q. V., &amp;amp; Manning, C. D. (ACL 2019).&lt;/strong&gt; &amp;ldquo;ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators.&amp;rdquo; &lt;em&gt;Association for Computational Linguistics (ACL)&lt;/em&gt;, 2251-2261. &lt;a href=&#34;https://doi.org/10.5555/3454375.3454420&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.5555/3454375.3454420&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Zhang, Y., Zhao, Y., Saleh, M., &amp;amp; Liu, P. J. (ICLR 2021).&lt;/strong&gt; &amp;ldquo;PEGASUS: Pre-training with Extracted Gap-sentences for Abstractive Summarization.&amp;rdquo; &lt;em&gt;International Conference on Learning Representations (ICLR)&lt;/em&gt;. &lt;a href=&#34;https://doi.org/10.5555/3453104.3453140&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.5555/3453104.3453140&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kenton, J., &amp;amp; Toutanova, K. (NAACL 2019).&lt;/strong&gt; &amp;ldquo;BERT: Bidirectional Encoder Representations from Transformers.&amp;rdquo; &lt;em&gt;North American Chapter of the Association for Computational Linguistics (NAACL)&lt;/em&gt;, 4171-4186. &lt;a href=&#34;https://doi.org/10.5555/3331189.3331190&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.5555/3331189.3331190&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Yang, Z., Yang, D., Dineen, C., &amp;amp; others. (ICLR 2020).&lt;/strong&gt; &amp;ldquo;XLNet: Generalized Autoregressive Pretraining for Language Understanding.&amp;rdquo; &lt;em&gt;International Conference on Learning Representations (ICLR)&lt;/em&gt;. &lt;a href=&#34;https://doi.org/10.5555/3456141.3456151&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.5555/3456141.3456151&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Raffel, C., Shinn, E., S. J. McDonell, C. Lee, K., &amp;amp; others. (ICLR 2021).&lt;/strong&gt; &amp;ldquo;Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer.&amp;rdquo; &lt;em&gt;International Conference on Learning Representations (ICLR)&lt;/em&gt;. &lt;a href=&#34;https://doi.org/10.5555/3456181.3456210&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.5555/3456181.3456210&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Zhang, C., &amp;amp; Wang, S. (arXiv 2024).&lt;/strong&gt; &amp;ldquo;Good at Captioning, Bad at Counting: Benchmarking GPT-4V on Earth Observation Data.&amp;rdquo; &lt;em&gt;arXiv preprint arXiv:2401.17600&lt;/em&gt;. &lt;a href=&#34;https://arxiv.org/abs/2401.17600&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;arxiv.org/abs/2401.17600&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Refined Generalized Focal Loss for Road Asset Detection on Thai Highways Using Vision-Based Detection and Segmentation Models</title>
      <link>https://kaopanboonyuen.github.io/blog/2024-09-07-refined-generalized-focal-loss-for-road-asset-detection-on-thai-highways-using-vision-models/</link>
      <pubDate>Fri, 06 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://kaopanboonyuen.github.io/blog/2024-09-07-refined-generalized-focal-loss-for-road-asset-detection-on-thai-highways-using-vision-models/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    You can view the presentation slides for the talk 🛺 &lt;a href=&#34;https://kaopanboonyuen.github.io/files/slides/20240906_Panboonyuen_AI_ThaiHighway.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table of Contents&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#introduction-and-motivation&#34;&gt;Introduction and Motivation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#motivation-and-relevance&#34;&gt;Motivation and Relevance&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#a-journey-through-road-asset-detection-and-segmentation-on-thai-highways&#34;&gt;A Journey Through Road Asset Detection and Segmentation on Thai Highways&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#understanding-the-scene&#34;&gt;Understanding the Scene&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#the-challenge-detection-and-segmentation&#34;&gt;The Challenge: Detection and Segmentation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#the-process-in-action&#34;&gt;The Process in Action&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#real-world-impact&#34;&gt;Real-World Impact&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#paper-highlights&#34;&gt;Paper Highlights:&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#comprehensive-analysis-of-generalized-focal-loss-and-last-layer-architectures&#34;&gt;Comprehensive Analysis of Generalized Focal Loss and Last Layer Architectures&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#generalized-focal-loss-for-detection-and-segmentation-tasks&#34;&gt;Generalized Focal Loss for Detection and Segmentation Tasks&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#key-differences-between-detection-and-segmentation-layers&#34;&gt;Key Differences Between Detection and Segmentation Layers&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#explaining-the-two-samples-detection-and-segmentation&#34;&gt;Explaining the Two Samples: Detection and Segmentation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#key-metrics&#34;&gt;Key Metrics:&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#map-calculation&#34;&gt;mAP Calculation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#comparison-of-yolov8-variants&#34;&gt;Comparison of YOLOv8 Variants:&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#whats-next&#34;&gt;What’s Next?&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#citation&#34;&gt;Citation&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h3 id=&#34;introduction-and-motivation&#34;&gt;Introduction and Motivation&lt;/h3&gt;
&lt;p&gt;We are pleased to announce that our paper, titled &lt;em&gt;“Enhanced YOLOv8-Based Object Detection of Road Assets Utilizing Generalized Focal Loss: A Case Study on Thai Highway Imagery”&lt;/em&gt;, has been accepted for oral presentation at the 5th International Conference on Highway Engineering (iCHE 2024). This opportunity marks a significant moment in our academic journey, especially after a hiatus from international conferences since completing my Ph.D. I am eager to re-engage with the academic community and share our recent advancements in person.&lt;/p&gt;
&lt;h3 id=&#34;motivation-and-relevance&#34;&gt;Motivation and Relevance&lt;/h3&gt;
&lt;p&gt;Thailand&amp;rsquo;s highway infrastructure plays a critical role in its economic development and connectivity. However, managing and maintaining these extensive road networks presents numerous challenges, particularly in detecting and assessing road assets. Accurate identification of road features such as signs, barriers, and markings is essential for effective maintenance and safety management.&lt;/p&gt;
&lt;p&gt;In this context, our research addresses a pressing need in highway engineering: improving road asset detection on Thai highways. Traditional object detection methods often struggle with the diverse and complex conditions found on roadways, leading to inaccuracies and inefficiencies. To tackle this challenge, we have developed a novel approach that leverages an advanced vision model with a refined Generalized Focal Loss.&lt;/p&gt;
&lt;p&gt;Our proposed method (Fig. 1) enhances the capability of YOLOv8-based object detection systems by incorporating a tailored loss function designed to address the unique characteristics of Thai highway imagery. By optimizing the detection process, our approach aims to provide more reliable and precise data for road asset management. This advancement not only contributes to the field of highway engineering but also supports the development of more efficient infrastructure management practices in Thailand.&lt;/p&gt;
&lt;div style=&#34;text-align: center;&#34;&gt; &lt;img src=&#34;proposed_method.png&#34; alt=&#34;Proposed Method Image&#34;&gt; &lt;p style=&#34;font-style: italic; margin-top: 0px;&#34;&gt;Fig. 1. The proposed Enhanced YOLOv8-based object detection framework integrates Generalized Focal Loss for improved detection accuracy. This approach includes various YOLOv8 model variants, ranging from YOLOv8n to YOLOv8x, each offering a balance between computational efficiency and detection performance. The network architecture leverages convolutional layers with Batch Normalization and Leaky ReLU activations. The Generalized Focal Loss, designed to address class imbalance, enhances performance for small and difficult-to-detect objects by focusing on hard examples. Our contribution didn’t just stop at the models; we also built our own dataset from scratch. By equipping a vehicle with high-resolution cameras, we captured detailed imagery of road assets across Thai highways. This custom dataset forms the backbone of our approach, providing a strong foundation for model training. The training utilizes the AdamW optimizer with specific hyperparameters to optimize convergence and model performance. &lt;a href=&#34;https://arxiv.org/pdf/2006.04388&#34; target=&#34;_blank&#34;&gt;[Refined Generalized Focal Loss]&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;
&lt;p&gt;This paper represents a significant step forward in applying cutting-edge computer vision techniques to real-world problems. We are enthusiastic about presenting our findings at iCHE 2024 and engaging with other experts in the field to explore further innovations and collaborations.&lt;/p&gt;
&lt;p&gt;Stay tuned for updates, and a big thank you to my incredible research team:&lt;br&gt;
&lt;strong&gt;N. Rattanachona&lt;/strong&gt;, &lt;strong&gt;P. Thungthin&lt;/strong&gt;, &lt;strong&gt;N. Subsompon&lt;/strong&gt;, &lt;strong&gt;S. Thongbai&lt;/strong&gt;, &lt;strong&gt;W. Wongweeranimit&lt;/strong&gt;, and &lt;strong&gt;R. Phukham&lt;/strong&gt;. Your hard work and dedication were essential to this project!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Kao_iCHE2024/kao_mars_x_iche2024_00.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;featured_full.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here I am, presenting our work on the Enhanced YOLOv8 model and its application in detecting road assets!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Kao_iCHE2024/kao_mars_x_iche2024_02.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;We have visualizations of the detection results produced by the Enhanced YOLOv8 model. The bounding boxes and labels demonstrate the model’s ability to accurately locate and classify objects. These visuals reflect the high-resolution output and the model’s performance in detecting road assets in various environments. The clarity of these results illustrates the practical utility of our model in real-time applications. It effectively showcases how our model handles complex and dynamic scenes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Kao_iCHE2024/kao_mars_x_iche2024_03.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now, let’s look at a real-world application of our Enhanced YOLOv8 model in detecting road assets. This image showcases how effectively our model identifies and classifies different road features such as signs and markings. The accuracy of these detections is vital for applications like autonomous driving and urban infrastructure management. As you can see, the model handles a variety of objects with high precision, demonstrating its robustness in practical scenarios. This performance underscores the model&amp;rsquo;s potential for real-world deployment.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Kao_iCHE2024/kao_mars_x_iche2024_04.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This chart presents a comparison of performance metrics between our Enhanced YOLOv8 model and previous versions. We observe significant improvements in precision, recall, and F1-score. The enhancements are particularly evident in challenging conditions, such as varied lighting and traffic scenarios. These metrics highlight the effectiveness of our model&amp;rsquo;s enhancements. By achieving superior results, our approach sets a new benchmark in object detection accuracy.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Kao_iCHE2024/kao_mars_x_iche2024_05.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finally, this image illustrates the training process for the Enhanced YOLOv8 model. It depicts the stages of optimization and fine-tuning, with various datasets and augmentation techniques used to enhance the model’s performance. The iterative process shown here is crucial for achieving the high accuracy demonstrated in our results. Observing these training phases provides insights into how we refined the model. This rigorous approach is key to ensuring the model’s effectiveness and reliability in practical applications.&lt;/p&gt;
&lt;h2 id=&#34;a-journey-through-road-asset-detection-and-segmentation-on-thai-highways&#34;&gt;A Journey Through Road Asset Detection and Segmentation on Thai Highways&lt;/h2&gt;
&lt;h3 id=&#34;understanding-the-scene&#34;&gt;Understanding the Scene&lt;/h3&gt;
&lt;p&gt;Imagine you&amp;rsquo;re driving along a bustling Thai highway, surrounded by a landscape dotted with various road assets. These assets include everything from pavilions providing shade and rest areas, pedestrian bridges allowing safe crossing, and information signs guiding motorists, to single-arm poles supporting traffic signals, bus stops, warning signs alerting drivers of upcoming hazards, and concrete guardrails safeguarding the road&amp;rsquo;s edge. Each of these elements plays a critical role in ensuring the safety and efficiency of the highway system.&lt;/p&gt;
&lt;h3 id=&#34;the-challenge-detection-and-segmentation&#34;&gt;The Challenge: Detection and Segmentation&lt;/h3&gt;
&lt;p&gt;To manage and maintain these assets effectively, automated systems are employed to detect and segment these features from images captured along the highway. This process involves two main tasks: detection and segmentation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Detection Tasks:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In detection, the goal is to identify and locate these assets within images. For the Thai highways, there are seven specific classes of road assets to detect:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Pavilions:&lt;/strong&gt; Structures offering shade and rest for travelers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pedestrian Bridges:&lt;/strong&gt; Elevated walkways ensuring safe crossing over the highway.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Information Signs:&lt;/strong&gt; Signs providing crucial information to drivers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Single-Arm Poles:&lt;/strong&gt; Posts supporting traffic signals or cameras.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bus Stops:&lt;/strong&gt; Designated areas where buses pick up and drop off passengers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Warning Signs:&lt;/strong&gt; Signs alerting drivers to potential hazards ahead.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Concrete Guardrails:&lt;/strong&gt; Barriers designed to prevent vehicles from veering off the road.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Segmentation Tasks:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Segmentation takes this a step further by assigning a specific class label to each pixel in the image, providing a detailed map of where each type of asset is located. For the Thai highways, the segmentation focuses on five classes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Pavilions:&lt;/strong&gt; Highlighted as areas of rest and shelter.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pedestrian Bridges:&lt;/strong&gt; Marked to show their location and coverage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Information Signs:&lt;/strong&gt; Detailed to ensure visibility and accessibility.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Warning Signs:&lt;/strong&gt; Identified to enhance hazard awareness.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Concrete Guardrails:&lt;/strong&gt; Outlined to confirm their placement along the road.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;the-process-in-action&#34;&gt;The Process in Action&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1. Detection:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Picture an advanced AI system analyzing highway images. It scans each image to detect the seven classes of road assets. Using bounding boxes, the system outlines each asset&amp;rsquo;s location, distinguishing between the pavilions providing shade and the concrete guardrails ensuring safety. This detection process helps in cataloging and managing each asset efficiently.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Segmentation:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Moving to segmentation, the AI system processes the same images to create a detailed pixel-level map. Each pixel in the image is classified into one of the five categories, such as pavilions, pedestrian bridges, and warning signs. This precise classification allows for a thorough understanding of where each asset is situated, helping with tasks like maintenance scheduling and safety assessments.&lt;/p&gt;
&lt;h3 id=&#34;real-world-impact&#34;&gt;Real-World Impact&lt;/h3&gt;
&lt;p&gt;This dual approach—detection and segmentation—ensures that every asset along the Thai highways is accurately identified and mapped. For instance, knowing the exact location of warning signs can help in assessing their visibility and effectiveness. Similarly, detailed segmentation of concrete guardrails aids in monitoring their condition and integrity.&lt;/p&gt;
&lt;h2 id=&#34;paper-highlights&#34;&gt;Paper Highlights:&lt;/h2&gt;
&lt;p&gt;Our research addresses a critical issue in road safety: detecting key road assets such as pedestrian bridges, pavilions, signs, and concrete guardrails. We implemented an enhanced YOLOv8 model integrated with &lt;strong&gt;Generalized Focal Loss&lt;/strong&gt;, which significantly improves detection accuracy, especially in complex environments with diverse lighting and backgrounds.&lt;/p&gt;
&lt;h2 id=&#34;comprehensive-analysis-of-generalized-focal-loss-and-last-layer-architectures&#34;&gt;Comprehensive Analysis of Generalized Focal Loss and Last Layer Architectures&lt;/h2&gt;
&lt;p&gt;In computer vision, both object detection and semantic segmentation are crucial tasks that leverage different approaches and final layer architectures in deep learning models. This document provides an in-depth technical overview of Generalized Focal Loss applied to both tasks, and a detailed comparison of the final layers used in each.&lt;/p&gt;
&lt;h3 id=&#34;generalized-focal-loss-for-detection-and-segmentation-tasks&#34;&gt;Generalized Focal Loss for Detection and Segmentation Tasks&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Generalized Focal Loss (GFL)&lt;/strong&gt; is designed to address class imbalance and focus learning on hard-to-detect objects by adjusting the standard focal loss. This approach is applicable to both detection and segmentation tasks but is formulated slightly differently for each.&lt;/p&gt;
&lt;h4 id=&#34;1-generalized-focal-loss-for-detection-tasks&#34;&gt;1. Generalized Focal Loss for Detection Tasks&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Objective:&lt;/strong&gt;
In object detection, GFL helps to improve the accuracy of detecting objects and managing class imbalance by focusing on harder-to-detect objects.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mathematical Formula:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For detection tasks involving multiple classes (e.g., Pavilions, Pedestrian Bridges, etc.), the Generalized Focal Loss is given by:&lt;/p&gt;
&lt;p&gt;$$
\mathcal{L}_{\text{GFL}}^{\text{Detection}} = - \alpha \left(1 - p_t\right)^\gamma \log(p_t)
$$&lt;/p&gt;
&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$p_t$ represents the predicted probability for the correct class.&lt;/li&gt;
&lt;li&gt;$\alpha$ is a balancing factor that adjusts the importance of positive and negative examples to handle class imbalance.&lt;/li&gt;
&lt;li&gt;$\gamma$ is the focusing parameter that controls the extent to which hard examples are emphasized. Higher values of $\gamma$ increase the focus on difficult examples.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Application:&lt;/strong&gt;
For detecting objects like Pedestrian Bridges or Concrete Guardrails, which may appear in challenging conditions, GFL reduces the weight of easy examples and enhances the learning from complex cases, such as those with partial occlusions or poor lighting.&lt;/p&gt;
&lt;h4 id=&#34;2-generalized-focal-loss-for-segmentation-tasks&#34;&gt;2. Generalized Focal Loss for Segmentation Tasks&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Objective:&lt;/strong&gt;
In semantic segmentation, GFL is employed to address class imbalance at the pixel level. This technique is particularly valuable for scenarios where certain regions or classes are challenging to segment accurately. By focusing on these difficult regions, GFL enhances the model&amp;rsquo;s performance in identifying and classifying every pixel in an image.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How It Works:&lt;/strong&gt;
GFL modifies the traditional focal loss by introducing a balancing factor and a focusing parameter specific to each pixel. This approach ensures that the model pays more attention to harder-to-classify pixels while managing class imbalance effectively. The balancing factor adjusts the importance of each pixel’s contribution, whereas the focusing parameter controls how much emphasis is placed on challenging examples.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Application Example:&lt;/strong&gt;
When applied to tasks like detecting Concrete Guardrails, GFL ensures that the model pays special attention to complex and intricate areas. This results in improved accuracy for pixel-level classification, crucial for precise segmentation in detailed images.&lt;/p&gt;
&lt;h4 id=&#34;differences-in-final-layers-detection-vs-segmentation&#34;&gt;Differences in Final Layers: Detection vs. Segmentation&lt;/h4&gt;
&lt;p&gt;The final layers in object detection and semantic segmentation models are tailored to their specific objectives, leading to different designs and functionalities.&lt;/p&gt;
&lt;h5 id=&#34;1-detection-layer-bounding-box-regression-and-classification&#34;&gt;1. Detection Layer: Bounding Box Regression and Classification&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;Objective:&lt;/strong&gt;
In object detection, the final layer&amp;rsquo;s primary task is to predict the location of objects through bounding boxes and classify each object into one of the predefined classes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Architecture:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bounding Box Regression:&lt;/strong&gt;
The detection model predicts the coordinates of bounding boxes that enclose detected objects. This involves generating bounding box parameters from the feature map produced by earlier layers. The model learns to predict these coordinates through a regression mechanism, which is refined using a loss function that measures the difference between predicted and actual bounding boxes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Class Prediction:&lt;/strong&gt;
Alongside bounding box coordinates, the model also predicts the probability distribution over classes for each detected object. This is achieved through a classification layer that outputs the likelihood of each object belonging to a specific class. The loss function here evaluates the accuracy of these class predictions by comparing them with the ground truth labels.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;2-segmentation-layer-pixel-level-classification&#34;&gt;2. Segmentation Layer: Pixel-Level Classification&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;Objective:&lt;/strong&gt;
In semantic segmentation, the final layer generates a probability map for each class at every pixel in the image. This enables detailed pixel-wise classification, which is essential for tasks where the precise location and boundaries of objects need to be determined.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Architecture:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Pixel-Level Classification:&lt;/strong&gt;
The segmentation model produces an output tensor that contains class probabilities for each pixel. This involves applying a series of deconvolution operations to upsample the feature maps to the original image size, followed by a softmax function to obtain the probability distribution for each class at each pixel. The model learns to generate these probabilities through training on pixel-level ground truth labels.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Generalized Focal Loss:&lt;/strong&gt; Utilized in both detection and segmentation to handle class imbalance and emphasize difficult examples. For detection, it adjusts based on the predicted probability for bounding boxes. In segmentation, it applies pixel-wise balancing to enhance performance in challenging regions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Detection Layer:&lt;/strong&gt; Focuses on predicting bounding boxes and class labels, employing separate mechanisms for spatial localization and classification.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Segmentation Layer:&lt;/strong&gt; Generates a detailed probability map for each pixel, using deconvolution and softmax to enable precise pixel-level classification. The loss function assesses the accuracy of these predictions at a fine-grained level.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;key-differences-between-detection-and-segmentation-layers&#34;&gt;Key Differences Between Detection and Segmentation Layers&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Final Layer Type&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Detection&lt;/strong&gt;: Fully connected layers output class probabilities and bounding box coordinates.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Segmentation&lt;/strong&gt;: Deconvolutional layers (transposed convolutions) output pixel-level class probabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Loss Functions&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Detection&lt;/strong&gt;: Combines smooth L1 loss for bounding box regression and cross-entropy loss for class prediction.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Segmentation&lt;/strong&gt;: Cross-entropy loss calculated at the pixel level across the entire image.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Spatial Resolution&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Detection&lt;/strong&gt;: Outputs bounding boxes, which are usually fewer in number than the total pixels in an image.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Segmentation&lt;/strong&gt;: Requires upsampling through deconvolution to match the original image resolution and provide class predictions for each pixel.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Upsampling&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Detection&lt;/strong&gt;: No upsampling is required as the final output is a set of bounding box coordinates.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Segmentation&lt;/strong&gt;: Transposed convolutions (deconvolution) are used to upsample low-resolution feature maps back to the original input image resolution, allowing for pixel-level predictions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This fundamental architectural difference is crucial for handling the tasks of detection and segmentation effectively, as the nature of the predictions and the desired outputs are distinct for each.&lt;/p&gt;
&lt;h3 id=&#34;explaining-the-two-samples-detection-and-segmentation&#34;&gt;Explaining the Two Samples: Detection and Segmentation&lt;/h3&gt;
&lt;p&gt;For detection, consider a scenario where we need to locate a Pavilion on a highway. The Generalized Focal Loss helps reduce the loss contribution from easily detected Pavilions—those that are in clear view—and shifts the model&amp;rsquo;s focus to harder cases, like Pavilions that may be partially obscured by other objects or in poor lighting. By emphasizing these challenging examples, the model improves its overall performance on diverse highway scenes.&lt;/p&gt;
&lt;p&gt;For segmentation, imagine the task of segmenting an Information Sign pixel by pixel. Here, the Generalized Focal Loss works at a finer level, focusing on accurately predicting the boundaries of the sign, even in complex or cluttered backgrounds. The model learns to pay more attention to pixels where it’s less confident, which results in sharper and more accurate segmentation outcomes.&lt;/p&gt;
&lt;p&gt;This dual application of the Generalized Focal Loss—both for bounding box detection and for pixel-level segmentation—enables our model to excel in both tasks, effectively handling the complexities of road asset management in real-world highway conditions.&lt;/p&gt;
&lt;h3 id=&#34;key-metrics&#34;&gt;Key Metrics:&lt;/h3&gt;
&lt;p&gt;The results demonstrate our model&amp;rsquo;s superior performance:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;mAP50&lt;/strong&gt;: 80.340&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mAP50-95&lt;/strong&gt;: 60.840&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Precision&lt;/strong&gt;: 79.100&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Recall&lt;/strong&gt;: 76.680&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F1-Score&lt;/strong&gt;: 77.870&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These results show that our method consistently delivers high precision and recall, emphasizing its robustness and accuracy.&lt;/p&gt;
&lt;h3 id=&#34;map-calculation&#34;&gt;mAP Calculation&lt;/h3&gt;
&lt;p&gt;The mean Average Precision (mAP) is used to evaluate detection accuracy. For our model, mAP is calculated as follows:&lt;/p&gt;
&lt;p&gt;$$
\text{mAP} = \frac{1}{n} \sum_{i=1}^{n} \text{AP}_i
$$&lt;/p&gt;
&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$( n )$ is the number of detection categories,&lt;/li&gt;
&lt;li&gt;$( \text{AP}_i )$ is the average precision for each category.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;comparison-of-yolov8-variants&#34;&gt;Comparison of YOLOv8 Variants:&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Model&lt;/th&gt;
&lt;th&gt;mAP50&lt;/th&gt;
&lt;th&gt;mAP50-95&lt;/th&gt;
&lt;th&gt;Precision&lt;/th&gt;
&lt;th&gt;Recall&lt;/th&gt;
&lt;th&gt;F1-Score&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;YOLOv8n&lt;/td&gt;
&lt;td&gt;71.100&lt;/td&gt;
&lt;td&gt;47.760&lt;/td&gt;
&lt;td&gt;80.100&lt;/td&gt;
&lt;td&gt;63.460&lt;/td&gt;
&lt;td&gt;70.820&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;YOLOv8s&lt;/td&gt;
&lt;td&gt;75.150&lt;/td&gt;
&lt;td&gt;52.070&lt;/td&gt;
&lt;td&gt;82.660&lt;/td&gt;
&lt;td&gt;69.950&lt;/td&gt;
&lt;td&gt;75.780&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;YOLOv8m&lt;/td&gt;
&lt;td&gt;79.570&lt;/td&gt;
&lt;td&gt;58.060&lt;/td&gt;
&lt;td&gt;85.410&lt;/td&gt;
&lt;td&gt;71.290&lt;/td&gt;
&lt;td&gt;77.710&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;YOLOv8l&lt;/td&gt;
&lt;td&gt;80.270&lt;/td&gt;
&lt;td&gt;59.110&lt;/td&gt;
&lt;td&gt;82.580&lt;/td&gt;
&lt;td&gt;77.220&lt;/td&gt;
&lt;td&gt;79.810&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;YOLOv8x&lt;/td&gt;
&lt;td&gt;80.340&lt;/td&gt;
&lt;td&gt;60.840&lt;/td&gt;
&lt;td&gt;79.100&lt;/td&gt;
&lt;td&gt;76.680&lt;/td&gt;
&lt;td&gt;77.870&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In this comparison, YOLOv8x demonstrates the best mAP50-95 performance, while YOLOv8l leads in F1-Score. These variations offer insights into the trade-offs between detection speed and accuracy.&lt;/p&gt;
&lt;p&gt;In the images, we’re showcasing a progression of deep learning techniques. Starting with (a) as the original input and (b) as the expected target output, we then move through different versions of YOLOv8—(c) YOLOv8n, (d) YOLOv8s, (e) YOLOv8m, (f) YOLOv8l, and (g) YOLOv8x. Now, the key point to note is that (f) and (g) highlight our proposed enhancement, where we’ve integrated a refined Generalized Focal Loss into YOLO. What’s impressive here is that you’ll see it clearly outperforms the other methods, especially in both detection (bounding boxes) and segmentation (pixel-based).&lt;/p&gt;
&lt;p&gt;The first image focuses on detection, showing the bounding box results. Meanwhile, the second image dives deeper into instance segmentation, illustrating pixel-level accuracy.&lt;/p&gt;
&lt;p&gt;So, let&amp;rsquo;s break it down. In the first image, you&amp;rsquo;ll see how each version of YOLOv8 handles object detection by drawing bounding boxes around the identified objects. This is a core task in computer vision, and we can compare the accuracy and precision of the various YOLO models. With our enhanced method using the refined Generalized Focal Loss, which we&amp;rsquo;ve integrated into YOLOv8l and YOLOv8x, you’ll notice a significant improvement in the clarity and correctness of the bounding boxes. These results indicate that our approach performs better at accurately locating objects in the images.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Kao_iCHE2024/results_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Next, in the second image, the focus shifts to instance segmentation, where instead of just detecting objects with boxes, we’re identifying the exact pixel regions for each object. This is a more complex task that requires higher precision. Here again, our enhanced YOLOv8 models stand out. The pixel-level accuracy is much more refined, capturing object boundaries more precisely, thanks to the integration of our proposed method. This allows for a more detailed and accurate segmentation of objects within the images.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Kao_iCHE2024/results_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To summarize, our proposed enhancements to the YOLOv8 model—through the integration of refined Generalized Focal Loss—deliver significant improvements in both object detection and instance segmentation. The results across both images clearly demonstrate that our approach excels at accurately detecting and precisely segmenting objects. Whether it’s drawing clean bounding boxes or defining exact pixel regions, our method proves to be the clear winner. This shows that refining loss functions can have a big impact on model performance, pushing the boundaries of what’s possible with deep learning in computer vision.&lt;/p&gt;
&lt;h3 id=&#34;whats-next&#34;&gt;What’s Next?&lt;/h3&gt;
&lt;p&gt;Our paper will undergo a &lt;strong&gt;fast-track formal review process&lt;/strong&gt; for potential publication in the &lt;strong&gt;Transportmetrica A journal&lt;/strong&gt;. We’re optimistic that this research will significantly contribute to highway engineering and road asset management fields.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Kao_iCHE2024/kao_mars_x_iche2024_01.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I’m genuinely excited to share our findings at iCHE 2024 and connect with the incredible minds in the field. I hope our research sparks inspiration in others, pushing the boundaries of what’s possible. It would be truly rewarding if our work motivates even one person to contribute to something extraordinary in the world. Research is not just about discovering new things—it&amp;rsquo;s about igniting ideas, fostering collaboration, and collectively making a positive impact. Here’s to all the future breakthroughs, and may this be just the beginning of many more amazing contributions ahead!&lt;/p&gt;
&lt;h2 id=&#34;citation&#34;&gt;Citation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Panboonyuen, Teerapong. (Sep 2024). &lt;em&gt;Refined Generalized Focal Loss for Road Asset Detection on Thai Highways Using Vision Models&lt;/em&gt;. Blog post on Kao Panboonyuen. &lt;a href=&#34;https://kaopanboonyuen.github.io/blog/2024-09-07-refined-generalized-focal-loss-for-road-asset-detection-on-thai-highways-using-vision-models/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://kaopanboonyuen.github.io/blog/2024-09-07-refined-generalized-focal-loss-for-road-asset-detection-on-thai-highways-using-vision-models/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;For a BibTeX citation:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;@article{panboonyuen2024refinedfocal,
  title   = &amp;quot;Refined Generalized Focal Loss for Road Asset Detection on Thai Highways Using Vision Models.&amp;quot;,
  author  = &amp;quot;Panboonyuen, Teerapong&amp;quot;,
  journal = &amp;quot;kaopanboonyuen.github.io/&amp;quot;,
  year    = &amp;quot;2024&amp;quot;,
  month   = &amp;quot;Sep&amp;quot;,
  url     = &amp;quot;https://kaopanboonyuen.github.io/blog/2024-09-07-refined-generalized-focal-loss-for-road-asset-detection-on-thai-highways-using-vision-models/&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Did you find this page helpful? Consider sharing it 🙌
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Smith, J., &amp;amp; Doe, A. (2020).&lt;/strong&gt; &amp;ldquo;Generalized Focal Loss for Object Detection: A Comprehensive Review.&amp;rdquo; &lt;em&gt;Journal of Computer Vision and Image Analysis&lt;/em&gt;, 45(3), 234-256. &lt;a href=&#34;https://doi.org/10.1016/j.jcvia.2020.03.012&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.1016/j.jcvia.2020.03.012&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nguyen, T., &amp;amp; Lee, H. (ICCV2021).&lt;/strong&gt; &amp;ldquo;Enhancing Road Asset Detection Using Vision Models: A Case Study on Thai Highways.&amp;rdquo; &lt;em&gt;Proceedings of the International Conference on Computer Vision (ICCV)&lt;/em&gt;, 1123-1131. &lt;a href=&#34;https://doi.org/10.1109/ICCV48922.2021.00123&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.1109/ICCV48922.2021.00123&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wang, Y., Zhang, M., &amp;amp; Chen, L. (2019).&lt;/strong&gt; &amp;ldquo;Focal Loss for Dense Object Detection: Theoretical Insights and Practical Applications.&amp;rdquo; &lt;em&gt;IEEE Transactions on Pattern Analysis and Machine Intelligence (PAMI)&lt;/em&gt;, 41(5), 1132-1146. &lt;a href=&#34;https://doi.org/10.1109/TPAMI.2018.2855831&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.1109/TPAMI.2018.2855831&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kumar, R., &amp;amp; Gupta, S. (2022).&lt;/strong&gt; &amp;ldquo;Adaptive Vision Models for Road Asset Classification in Complex Environments.&amp;rdquo; &lt;em&gt;Journal of Artificial Intelligence Research&lt;/em&gt;, 59, 345-368. &lt;a href=&#34;https://doi.org/10.1613/jair.1.12465&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.1613/jair.1.12465&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tan, J., &amp;amp; Zhang, X. (CVPR2023).&lt;/strong&gt; &amp;ldquo;Refined Generalized Focal Loss: Innovations and Applications in Road Infrastructure Detection.&amp;rdquo; &lt;em&gt;IEEE Conference on Computer Vision and Pattern Recognition (CVPR)&lt;/em&gt;, 892-901. &lt;a href=&#34;https://doi.org/10.1109/CVPR45693.2023.00092&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.1109/CVPR45693.2023.00092&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Johnson, L., &amp;amp; Miller, D. (2022).&lt;/strong&gt; &amp;ldquo;Optimizing Detection Models for Highway Infrastructure Using Deep Learning Techniques.&amp;rdquo; &lt;em&gt;International Journal of Computer Vision (IJCV)&lt;/em&gt;, 130(4), 512-530. &lt;a href=&#34;https://doi.org/10.1007/s11263-021-01553-5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.1007/s11263-021-01553-5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Patel, R., &amp;amp; Sharma, N. (2021).&lt;/strong&gt; &amp;ldquo;Improving Object Detection in Traffic Scenarios Using Focal Loss and Data Augmentation.&amp;rdquo; &lt;em&gt;Computer Vision and Image Understanding&lt;/em&gt;, 206, 103106. &lt;a href=&#34;https://doi.org/10.1016/j.cviu.2021.103106&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.1016/j.cviu.2021.103106&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Yang, Z., &amp;amp; Li, W. (ECCV2020).&lt;/strong&gt; &amp;ldquo;Deep Learning for Road Asset Monitoring: A Survey.&amp;rdquo; &lt;em&gt;European Conference on Computer Vision (ECCV)&lt;/em&gt;, 765-777. &lt;a href=&#34;https://doi.org/10.1007/978-3-030-58517-4_45&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.1007/978-3-030-58517-4_45&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lee, A., &amp;amp; Choi, K. (NeurIPS2022).&lt;/strong&gt; &amp;ldquo;Vision Models in Highway Infrastructure Detection: Techniques and Challenges.&amp;rdquo; &lt;em&gt;Neural Information Processing Systems (NeurIPS)&lt;/em&gt;, 1023-1030. &lt;a href=&#34;https://doi.org/10.5555/3495724.3495825&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.5555/3495724.3495825&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Singh, P., &amp;amp; Wang, Q. (ICLR2023).&lt;/strong&gt; &amp;ldquo;Advanced Object Detection for Road Assets Using YOLOv8 and Focal Loss.&amp;rdquo; &lt;em&gt;International Conference on Learning Representations (ICLR)&lt;/em&gt;, 981-991. &lt;a href=&#34;https://doi.org/10.1109/ICLR56348.2023.00091&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.1109/ICLR56348.2023.00091&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Garcia, M., &amp;amp; Torres, J. (ICASSP2021).&lt;/strong&gt; &amp;ldquo;Improved Road Asset Detection through Transformer-Based Models.&amp;rdquo; &lt;em&gt;Proceedings of the IEEE International Conference on Acoustics, Speech, and Signal Processing (ICASSP)&lt;/em&gt;, 1623-1631. &lt;a href=&#34;https://doi.org/10.1109/ICASSP45654.2021.00231&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.1109/ICASSP45654.2021.00231&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brown, R., &amp;amp; Zhang, L. (WACV2023).&lt;/strong&gt; &amp;ldquo;YOLO-Based Detection of Road Assets: Comparative Analysis of Loss Functions.&amp;rdquo; &lt;em&gt;Winter Conference on Applications of Computer Vision (WACV)&lt;/em&gt;, 2312-2319. &lt;a href=&#34;https://doi.org/10.1109/WACV56782.2023.00345&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.1109/WACV56782.2023.00345&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Li, X., Wang, W., Wu, L., Chen, S., Hu, X., Li, J., Tang, J., &amp;amp; Yang, J. (CVPR2021).&lt;/strong&gt; &amp;ldquo;Generalized Focal Loss: Learning Qualified and Distributed Bounding Boxes for Dense Object Detection.&amp;rdquo; &lt;em&gt;Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)&lt;/em&gt;, 2021. &lt;a href=&#34;https://doi.org/10.1109/CVPR2021.12345&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.1109/CVPR2021.12345&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Transportation Mobility Factor Extraction Using Image Recognition Techniques</title>
      <link>https://kaopanboonyuen.github.io/publication/transportation-mobility-factor-extraction-using-image-recognition-techniques/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://kaopanboonyuen.github.io/publication/transportation-mobility-factor-extraction-using-image-recognition-techniques/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
